input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} %{PROG:program}\[%{POSINT:pid}\]: %{GREEDYDATA:message}" }
    overwrite => [ "message" ]
  }
  grok {
    patterns_dir => "/usr/share/logstash/patterns"
    match => {
      "message" => [
        "%{SSHD_FAIL}",
        "%{SSHD_USER_FAIL}",
        "%{SSHD_SUCCESS}",
        "%{SSHD_DISCONNECT}"
      ]
    }
    remove_field => [ "message", "tags", "@version", "[event][original]" ]
  }
  date {
    match => ["timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"]
    target => "@timestamp"
    timezone => "+08:00"
    remove_field => [ "timestamp" ]
  }
  geoip {
    source => "client_ip"
    target => "geoip"
    fields => ["country_name", "city_name", "latitude", "longitude"]
  }
  if "_grokparsefailure" in [tags] {
    drop{}
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
  }
  stdout {
    codec => rubydebug
  }
}